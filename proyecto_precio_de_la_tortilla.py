# -*- coding: utf-8 -*-
"""Proyecto Precio de la tortilla.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IiRDooWIdUQmP9LZ8XqcM_gud_oXSJEr
"""

# Cargar las librerías necesarias
install.packages("ggplot2")
install.packages("data.table")
library(data.table)
library(lubridate) #Para facilitar el trabajo con fechas
library(dplyr) # Para trabajar de manera eficiente los data frames
library(ggplot2)
library(readr) #Para leer datos de archivos en R (CSV)

Sys.setlocale("LC_ALL", "en_US.UTF-8") # Para trabajar con datos que contienen caracteres especiales
datosipm <- data.table::fread("indice_precios_maiz.csv")

lines <- readLines("indice_precios_maiz.csv", n = 10)
print(lines)

datos <- read.csv("tortilla_prices.csv")
datostcd <- read.csv("tipocambiodlls.csv")
datosipm <- data.table::fread("indice_precios_maiz.csv", encoding = "UTF-8", skip = 1, showProgress = TRUE)

datosipm
summary(datosipm)

datosipm[, fecha := as.Date(paste0(V1, "/01"), format="%Y/%m/%d")]
datosipm

print(head(datosipm))
print(names(datosipm))

datos
print(names(datos))

datostcd
print(names(datostcd))

head(datos)



summary(datos)

modelo <- lm(Price.per.kilogram ~ Year , data= datos)
summary(modelo)
plot(modelo)

plot(datos$Year, datos$Price.per.kilogram, xlab= "Año", ylab="precio de tortilla", main="Precio de torilla a traves de los años")
abline(modelo, col="red")

hist( datos$Price.per.kilogram, main="distribucion de precios de tortillas")
hist(datostcd$tipocambio, main = "Tipo de cambio")

# Gráfico de serie temporal de los precios de las tortillas
plot(datos$Year, datos$Price.per.kilogram, type = "l", xlab = "Fecha", ylab = "Precio de tortilla", main = "Precio de tortilla a lo largo del tiempo")

"""*Involucramos el tipo de cambio*

Convertimos la columna "Fecha" en "tipocambiodlls" a formato de fecha esto para poder extrar el año, mes y dia para que pueda coincidir con los datos de las tortillas.

Construccion del grafico para analisar el tipo de cambio promedio desde 2007 hasta el 2024
"""

datostcd <- read.csv("tipocambiodlls.csv")
# Convertimos la columna "fecha"
datostcd$Fecha <- dmy(datostcd$Fecha)
#Agrupamos los datos por mes y calculamos el promedio del tipo de cambio
tipo_cambio_mensual <- datostcd %>%
  group_by(Mes = floor_date(Fecha, "month")) %>%
  summarise(TipoCambioPromedio = mean(tipocambio, na.rm = TRUE))


#Modelo lineal
modelo_lineal <- lm(TipoCambioPromedio~ Mes, data = tipo_cambio_mensual )

#Graficamos
ggplot(tipo_cambio_mensual, aes(x = Mes, y = TipoCambioPromedio))+
geom_line(color = "orange") +
geom_point(color = "red") +
labs(title = " Tipó de cambio USD/MXN mensual a lo largo del tiempo",
x= "Fecha",
y = "Tipo de cambio mensual promedio") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))


summary(modelo_lineal)
plot(modelo_lineal)

"""Combinamos los datos basandonos en el año, mes y el dia para las tortillas y el tipo de cambio"""

datos <- read.csv("tortilla_prices.csv")
datostcd <- read.csv("tipocambiodlls.csv")

# Convertimos 'Fecha' a formato de fecha y extraemos año, mes y día
datostcd$Fecha <- as.Date(datostcd$Fecha, "%d/%m/%Y")
datostcd$Year <- as.integer(format(datostcd$Fecha, "%Y"))
datostcd$Month <- as.integer(format(datostcd$Fecha, "%m"))
datostcd$Day <- as.integer(format(datostcd$Fecha, "%d"))

# Combinamos los datos de las tortillas y el tipo de cambio por año, mes y día
combined_data <- merge(datos, datostcd, by = c("Year", "Month", "Day"))

# Ajustamos el modelo incluyendo el tipo de cambio
modelo_con_tipocambio <- lm(Price.per.kilogram ~ Year + Month + Day + tipocambio, data = combined_data)
summary(modelo_con_tipocambio)
plot(modelo_con_tipocambio)

plot(modelo_con_tipocambio)

"""Comparación del precio de la torilla entre el norte y el sur de México.



*   Definimos la regiones :  los estados que son considerados del norte son; Baja California, Sonora, Chihuahua, Coahuila, Nuevo Leon y Tamaulipas. Los estados son considerados del sur son; Chiapas, Oaxaca, Guerrero, Quintana Roo, Yucatan y Campeche.





"""

#Definimos los estados del norte y sur

estados_norte <- c("Baja California", "Sonora", "Chihuahua", "Coahuila", "Nuevo Leon", "Tamaulipas")
estados_sur <- c("Chiapas","Oaxaca","Guerrero" ,"Quintana Roo","Yucatan","Campeche")
# Creamos una nueva columna "Region"
datos$Region <- ifelse(datos$State %in% estados_norte, "Norte", ifelse(datos$State %in% estados_sur, "Sur", NA))
#Filtramos los datos para quitar aquellos sin region definida
datos <- na.omit(datos)

print(colnames(datos))
#Ajustamos
summary_estados_norte <- summary(datos[datos$Region == "Norte", "Price.per.kilogram" ])
summary_estados_sur <- summary(datos[datos$Region == "Sur", "Price.per.kilogram"])
summary_estados_norte
summary_estados_sur

#Grafico para comparar precios

ggplot(datos, aes(x=Region, y=Price.per.kilogram))+
  geom_boxplot(outlier.colour = "red", outlier.shape = 1, outlier.size = 2) +
  scale_fill_manual(values = c("Norte " = "blue", "sur"= "red")) +
  labs(title = "Comparación de precio de la tortilla: Norte vs Sur",
    x= "Región",
    y= "Precio por kilogramo" )+
  theme_minimal()+
  theme(axis.text.x = element_text(angle =0, hjust = 0.5),
    plot.title = element_text(hjust=0.5))

#Modelo lineal por region

modelo_norte <- lm(Price.per.kilogram~ Year, data = datos[datos$Region == "Norte", ])
modelo_sur <- lm(Price.per.kilogram~ Year, data = datos[datos$Region == "Sur", ])
summary(modelo_norte)
summary(modelo_sur)

####
# Verificar columnas en datos
print(colnames(datos))
print(colnames(combined_data))

# Si 'Region' no está en 'combined_data', crearla asumiendo que 'datos' ya tiene la columna
if(!"Region" %in% colnames(combined_data)){
  combined_data$Region <- datos$Region[match(paste(combined_data$Year, combined_data$Month, combined_data$Day), paste(datos$Year, datos$Month, datos$Day))]
}

# Asegúrate de que la columna 'Region' está disponible antes de correr el modelo
modelo_simple <- lm(Price.per.kilogram ~ Region + Year, data = datos)
modelo_con_tipocambio <- lm(Price.per.kilogram ~ Region + Year + tipocambio, data = combined_data)

# Resumen y gráficos
summary(modelo_simple)
summary(modelo_con_tipocambio)
ggplot(datos, aes(x = Year, y = Price.per.kilogram, color = Region)) +
  geom_line() +
  labs(title = "Precio de la Tortilla por Año y Región",
       x = "Año",
       y = "Precio por Kilogramo") +
  theme_minimal()

# Calculando los residuos
residuos_simple <- residuals(modelo_simple)
residuos_con_tipocambio <- residuals(modelo_con_tipocambio)

# Generando el gráfico Q-Q para el modelo simple
qqnorm(residuos_simple)
qqline(residuos_simple, col = "green")

# Generando el gráfico Q-Q para el modelo con tipo de cambio
qqnorm(residuos_con_tipocambio)
qqline(residuos_con_tipocambio, col = "blue")

"""Calculamos el criterio de Akaike"""

AIC(modelo_simple)
AIC(modelo_con_tipocambio)

summary(modelo_simple)
summary(modelo_con_tipocambio)
anova(modelo_simple, modelo_con_tipocambio)

"""*Modelo de efectos mixtos*"""

install.packages("lme4")
library(lme4)
library(dplyr)
library(nlme)

"""\begin{equation}
y_{ij} = \beta_0 + \beta_1 \text{{Year}}_{ij} + \beta_2 \text{{tipocambio}}_{ij} + \beta_3 \text{{RegionSur}}_{ij} + u_{j[i]} + \epsilon_{ij}
\end{equation}

*   $y_{ij}$: Precio por kilogramo de la tortiilla para el año i en la region j.
*   $\beta_0$: Intercepto, precio base.
* $\beta_1$: Efecto de año sobre el precio de la tortilla
* $\beta_2$: Efecto del tipo de cambio sobre el precio de la tortilla.
* $\beta_3$: Diferenecia de precios entre regiones (Norte como referencia).
* $u_{j[i]}$: Efectos aleatorios por combinacion de año y region.
*$\epsilon_{ij}$: Error residual.

Es necesario que la columna "Region" se este creando corractamente:


*   Checar que la columna "state" si este existente en la dataframe
"""

# Verificamos si la columna 'State' existe
if("State" %in% names(datos)) {
    print("La columna 'State' existe.")
} else {
    print("La columna 'State' no existe.")
}

# Creamos la columna 'Region' si 'State' existe
if("State" %in% names(datos)) {
    estados_norte <- c("Baja California", "Sonora", "Chihuahua", "Coahuila", "Nuevo Leon", "Tamaulipas")
    estados_sur <- c("Chiapas", "Oaxaca", "Guerrero", "Quintana Roo", "Yucatan", "Campeche")
    datos$Region <- ifelse(datos$State %in% estados_norte, "Norte",
                           ifelse(datos$State %in% estados_sur, "Sur", NA))

    # Eliminamos las filas donde 'Region' es NA
    datos <- na.omit(datos)

    # Verificamos la creación de 'Region'
    print(head(datos$Region))
} else {
    print("Revisa la disponibilidad de la columna 'State' para crear 'Region'")
}

"""Combinamos los Dataframes"""

# Combinamos los datos asegurandonos que 'Region' se mantiene
combined_data <- merge(datos, datostcd, by = c("Year", "Month", "Day"), all = TRUE)

# Verificamos si 'Region' está en combined_data después de la combinación
if("Region" %in% names(combined_data)) {
    print("La columna 'Region' está presente después de la combinación.")
} else {
    print("La columna 'Region' se perdió después de la combinación.")
}

# Ajustamos el modelo mixto si 'Region' está existente
if("Region" %in% names(combined_data)) {
    combined_data$Region <- as.factor(combined_data$Region)  # Convertir a factor si aún no lo es
    modelo_mixto <- lmer(Price.per.kilogram ~ Year + tipocambio + Region  + (1 | Year:Region), data = combined_data)
    print(summary(modelo_mixto))
} else {
    print("No se puede ajustar el modelo sin la columna 'Region'.")

}
plot(modelo_mixto ,xlab="predicciones del modelo",ylab="errores de predicción",main ="Gráfico de residuos")
#labs(title= "grafico de residuos", x = "Valores Ajustados","Residuos")

# Extraemos los residuales del modelo mixto
residuales <- residuals(modelo_mixto)

# Creamos el gráfico Q-Q
qqnorm(residuales, main = "Gráfico Q-Q de los Residuales")
qqline(residuales, col = "red")  # Añade una línea de referencia en rojo

"""*Involucramos el precio del maiz*

Paracargar los datos de los indices del precios del maiz utilizamos "data.table::fread", hacemos las transformacion de datos en formato año/mes, selecionamos las columnas relevantes la fecha y los valores de V2 (indice de precios maiz) y por ultimos cobinamos los datos del precio de la tortilla.
"""

# Cargamos el archivo y miramos las primeras líneas y nombres de columnas
datosipm <- fread("indice_precios_maiz.csv", encoding = "UTF-8", skip = 1)
print(head(datosipm))
print(names(datosipm))

# Convertimos la columna de período a tipo fecha
datosipm[, fecha := as.Date(paste0(V1, "/01"), format="%Y/%m/%d")]

# Convertimos la columna de precios o inflación a numérico
datosipm[, V2 := as.numeric(V2)]
#Selecionamos solo las columnas relevantes
datosipm <- datosipm[,.(fecha,V2)]


# Verificamos las transformaciones
print(head(datosipm))
summary(datosipm)
# Nos aseguramos  de que 'datosipm' tiene las columnas 'fecha' y 'V2' correctamente transformadas
plot(datosipm$fecha, datosipm$V2, type = 'l', col = 'blue', xlab = 'Fecha', ylab = 'Precios o Inflación', main = 'Evolución del precio del maíz a lo largo del tiempo')

datosipm

datos$fecha <- as.Date(paste(datos$Year, datos$Month, datos$Day, sep = "-"), "%Y-%m-%d")

combined_data <- merge(datos, datosipm, by = "fecha", all = TRUE)
head(combined_data)

combined_data <- merge(datos, datosipm, by = "fecha", all = TRUE)
combined_data

combined_data$fecha <- as.Date(combined_data$fecha)  # Convertir a tipo fecha si no lo está
combined_data$Year <- as.numeric(format(combined_data$fecha, "%Y"))
combined_data$Year

"""Construccion del modelo mixto incluyendo el precio del maiz.

\begin{equation}
y_{ij} = \beta_0 + \beta_1 \text{{Year}}_{ij} + \beta_2 \text{{V2}}_{ij} + \beta_3 \text{{RegionSur}}_{ij} + u_{j[i]} + \epsilon_{ij}
\end{equation}




*   $y_{ij}$: Precio por kilogramo de la tortiilla para el año i en la region j.
*   $\beta_0$: Intercepto, precio base.
* $\beta_1$: Efecto de año sobre el precio de la tortilla
* $\beta_2$: Efecto del precio del maiz sobre el precio de la tortilla.
* $\beta_3$: Diferenecia de precios entre regiones (Norte como referencia).
* $u_{j[i]}$: Efectos aleatorios por combinacion de año y region.
*$\epsilon_{ij}$: Error residual.
"""

library(lme4) # Para ajustar el modelo mixto que incluya  variabbles fijas y una aleatoria
#Nos aseguramos que combine_data tenga las columnas necesarias y esten correctamente formateadas
combined_data$fecha <- as.Date(combined_data$fecha)  # Convertir a tipo fecha si no lo está
combined_data$Year <- as.numeric(format(combined_data$fecha, "%Y"))

# Ajustamos el modelo mixo (2)
modelo_mixto2 <- lmer(Price.per.kilogram ~ Year + V2 + (1 | Year:Region), data = combined_data)
summary(modelo_mixto)

# Graficamos el modelo
plot(modelo_mixto2, xlab = "Predicciones del modelo", ylab = "Errores de predicción", main = "Gráfico de residuos")

combined_data$Region <- factor(combined_data$Region, levels = c("Norte", "Sur"))
library(lme4)
modelo_mixto2 <- lmer(Price.per.kilogram ~ Year + V2 + Region + (1 | Year:Region), data = combined_data)
summary(modelo_mixto2)
colores <- ifelse(combined_data$Region == "Norte", "green", "red")

plot(modelo_mixto,col=colores, xlab = "Predicciones del modelo", ylab = "Errores de predicción", main = "Gráfico de residuos")

# Extraer los residuales del modelo mixto 2
residuales <- residuals(modelo_mixto2)

# Crear el gráfico Q-Q
qqnorm(residuales, main = "Gráfico Q-Q de los Residuales")
qqline(residuales, col = "blue")  # Añade una línea de referencia en rojo

#Usaremos el paquete "MuMIn" para calcular R2 este paquete proporciona
#R2 marginal como el condicional
install.packages("MuMIn")
library(MuMIn)
r2 <- r.squaredGLMM(modelo_mixto)
print(r2)
r2 <- r.squaredGLMM(modelo_mixto2)
print(r2)

#Calculamos el criterio de Akaike
AIC(modelo_mixto)
AIC(modelo_mixto2)

"""Se realizo una prueba de razón de verosimilitud (Likelihood) entre los dos modelos mixtos (se cambio un poco el modelo_mixto y modelo_mixto 2) se ajustaron ambos modelos uno como completo y otro reducido."""

library(lme4)

# Ajustamos el modelo completo
modelo_completo <- lmer(Price.per.kilogram ~ Year + V2 + Region + (1 | Year:Region), data = combined_data)

# Ajustamos el modelo reducido (sin el efecto de 'Region')
modelo_reducido <- lmer(Price.per.kilogram ~ Year + V2 + (1 | Year:Region), data = combined_data)

#Prueba LRT
resultado_lrt <- anova(modelo_reducido, modelo_completo)
print(resultado_lrt)